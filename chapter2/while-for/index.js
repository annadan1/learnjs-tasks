const firstTask = () => {
  //Какое последнее значение выведет этот код? Почему?
  let i = 3;

  while (i) {
    alert(i--);
  }
  // последнее значение 1, потому что 0 будет ложным и итерация не будет выполнена
};

const secondTask = () => {
  /*
    Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
    Оба цикла выводят alert с одинаковыми значениями или нет?
    */

  const prefixCycle = () => {
    let i = 0;
    while (++i < 5) alert(i);
  };

  const postfixCycle = () => {
    let i = 0;
    while (i++ < 5) alert(i);
  };

  prefixCycle(); // 1 -> 2 -> 3 -> 4
  postfixCycle(); // 1 -> 2 -> 3 -> 4 -> 5
  // значения разные, так как префиксный сначала увеличит i, потом сравнит,
  // а постфиксный сначала сравнит значения, а потом увеличит i
};

const thirdTask = () => {
  /*
    Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
    Оба цикла выведут alert с одинаковыми значениями или нет?
    */
  for (let i = 0; i < 5; i++) alert(i);
  for (let j = 0; j < 5; ++j) alert(j);
  // одинаковые значения, так как сначала проверяется условие, потом шаг делается
};

const fourthTask = () => {
  //При помощи цикла for выведите чётные числа от 2 до 10.
  for (let i = 2; i <= 10; i += 1) {
    if (i % 2 === 0) alert(i);
  }
};
const fifthTask = () => {
  /*
Перепишите код, заменив цикл for на while, без изменения поведения цикла.
for (let i = 0; i < 3; i++) {
  alert( `number ${i}!` );
}
*/
  let i = 0;
  while (i < 3) {
    alert(`number ${i}!`);
    i += 1;
  }
};

const sixthTask = () => {
  /*
    Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
    Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
    Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.
    */
  let answer = 0;
  while (answer <= 100 && answer !== null) {
    answer = prompt("Введите число больше 100");
  }
};

const seventhTask = (n) => {
  /*
Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.
Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
Напишите код, который выводит все простые числа из интервала от 2 до n.
Для n = 10 результат должен быть 2,3,5,7.
P.S. Код также должен легко модифицироваться для любых других интервалов.
*/
  const isPrime = (num) => {
    for (let i = 2; i < num; i+=1){
        if (num % i === 0) return false
    }
    return true;
  };
  
  for (let i = 2; i <= n; i += 1) {
    if (isPrime(i)) alert(i);
  }
};

firstTask();
secondTask();
thirdTask();
fourthTask();
fifthTask();
sixthTask();
seventhTask(10);
